package util;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Assertions.assertSame;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.fail;

import java.util.Map;

import org.jgrapht.nio.Attribute;
import org.jgrapht.nio.DefaultAttribute;
import org.junit.jupiter.api.Test;

/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 20 14:47:36 GMT 2020
 * */


public class RelationshipEdgeTest {

	@Test 
	//@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
	public void test00()  throws Throwable  {
		RelationshipEdge relationshipEdge0 = new RelationshipEdge("?h)_2Y4uE%Lj%q-S{r");
		relationshipEdge0.setAttrs((Map<String, Attribute>) null);
		Map<String, Attribute> map0 = relationshipEdge0.getAtts();
		assertNull(map0);
	}

  @Test 
  //@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test01()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge();
      Double double0 = Double.valueOf((-400.993839361411));
      Attribute attribute0 = DefaultAttribute.createAttribute(double0);
      relationshipEdge0.setAtt("", attribute0);
      Object object0 = relationshipEdge0.getAtt("");
      assertSame(object0, attribute0);
  }

  @Test 
  //@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test02()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge();
      // Undeclared exception!
      try { 
        relationshipEdge0.toStringAtt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         //>verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test
  //@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test03()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge();
      relationshipEdge0.setAttrs((Map<String, Attribute>) null);
      // Undeclared exception!
      try { 
        relationshipEdge0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         //>verifyException("util.RelationshipEdge", e);
      }
  }

  @Test
  //@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test04()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge("RyNv_?7");
      Double double0 = Double.valueOf((-60.772513588703));
      relationshipEdge0.setAttrs((Map<String, Attribute>) null);
      Attribute attribute0 = DefaultAttribute.createAttribute(double0);
      // Undeclared exception!
      try { 
        relationshipEdge0.setAtt("Z*o,=CFF1#P<", attribute0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         //>verifyException("util.RelationshipEdge", e);
      }
  }

  @Test
  //@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test05()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge();
      // Undeclared exception!
      try { 
        relationshipEdge0.getNeighbor((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         //>verifyException("util.RelationshipEdge", e);
      }
  }

  @Test 
  //@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test06()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge("util.RelationshipEdge");
      relationshipEdge0.setAttrs((Map<String, Attribute>) null);
      // Undeclared exception!
      try { 
        relationshipEdge0.getLabel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         //>verifyException("util.RelationshipEdge", e);
      }
  }

  @Test
  //@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test07()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge();
      relationshipEdge0.setAttrs((Map<String, Attribute>) null);
      // Undeclared exception!
      try { 
        relationshipEdge0.getAtt("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         //>verifyException("util.RelationshipEdge", e);
      }
  }

  @Test 
  //@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test08()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge("");
      // Undeclared exception!
      try { 
        relationshipEdge0.equals((RelationshipEdge) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         //>verifyException("util.RelationshipEdge", e);
      }
  }

  @Test
  //@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test09()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge("?h)_2Y4uE%Lj%q-S{r");
      String string0 = relationshipEdge0.getLabel();
      assertNotNull(string0);
  }

  @Test
  //@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test10()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge();
      String string0 = relationshipEdge0.getLabel();
      assertEquals("{null,null}", string0);
  }

  @Test
  //@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test11()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge();
      String string0 = relationshipEdge0.toString();
      assertEquals("{null,null}", string0);
  }

  @Test
  //@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test12()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge(",");
      String string0 = relationshipEdge0.toString();
      assertNotNull(string0);
  }

  @Test
  //@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test13()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge(",");
      relationshipEdge0.hashCode();
  }

  @Test
  //@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test14()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge();
      Attribute attribute0 = DefaultAttribute.createAttribute((Long) null);
      Object object0 = relationshipEdge0.getNeighbor(attribute0);
      assertNull(object0);
  }

  @Test
  //@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test15()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge();
      RelationshipEdge relationshipEdge1 = new RelationshipEdge("%");
      boolean boolean0 = relationshipEdge1.equals(relationshipEdge0);
      assertFalse(boolean0);
  }

  @Test
  //@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test16()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge();
      Object object0 = relationshipEdge0.getAtt("%");
      assertNull(object0);
  }

  @Test//@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test17()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge();
      Object object0 = relationshipEdge0.getV1();
      assertNull(object0);
  }

  @Test
  //@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test18()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge();
      Object object0 = relationshipEdge0.getV2();
      assertNull(object0);
  }

  @Test
  //@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test19()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge();
      boolean boolean0 = relationshipEdge0.equals(relationshipEdge0);
      assertTrue(boolean0);
  }

  @Test
  //@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test20()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge();
      Map<String, Attribute> map0 = relationshipEdge0.getAtts();
      relationshipEdge0.setAttrs(map0);
      assertEquals(0, map0.size());
  }

  @Test
  //@Timeout(value = 4000, unit.TimeUnit.MILISECONDS)
  public void test21()  throws Throwable  {
      RelationshipEdge relationshipEdge0 = new RelationshipEdge(",");
      Map<String, Attribute> map0 = relationshipEdge0.getAtts();
      assertFalse(map0.isEmpty());
  }
}

